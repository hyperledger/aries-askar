name: build-ios

on:
  push:
    branches:
      - main

env:
  LIB_NAME: aries_askar
  HEADER_FILE: include/libaries_askar.h

jobs:
  build_ios:
    name: build ios xcframework
    runs-on: macos-latest
    strategy:
      matrix:
        architecture:
          [aarch64-apple-ios, aarch64-apple-ios-sim, x86_64-apple-ios]
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@e
        with:
          targets: ${{ matrix.architecture }}
      - run: cargo build --lib --target ${{matrix.architecture}} --release
      - name: Save static library
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.architecture}}
          path: target/${{ matrix.architecture }}/release/lib${{ env.LIB_NAME }}.a

  create_ios_xcframework:
    name: Create ios xcframework
    runs-on: macos-latest
    needs: build_ios
    steps:
      - uses: actions/checkout@v3
      - name: Fetch static libraries
        uses: actions/download-artifact@v3
      - run: >
          lipo -create aarch64-apple-ios-sim/lib${{ env.LIB_NAME }}.a \
                       x86_64-apple-ios/lib${{ env.LIB_NAME }}.a \
               -output lib${{ env.LIB_NAME }}.a
      - run: >
          xcodebuild -create-xcframework \
            -library aarch64-apple-ios/lib${{ env.LIB_NAME }}.a -headers ${{ env.HEADER_FILE }} \
            -library lib${{ env.LIB_NAME }}.a                   -headers ${{ env.HEADER_FILE }} \
            -output ${{ env.LIB_NAME }}.xcframework
      - name: Save xcframework
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LIB_NAME }}.xcframework
          path: ${{ env.LIB_NAME }}.xcframework
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            aarch64-apple-ios
            aarch64-apple-ios-sim
            x86_64-apple-ios
          failOnError: false
